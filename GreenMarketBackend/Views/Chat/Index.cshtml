@{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_NavBar.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
</head>

<h2>Chat Room</h2>

<div id="chatContainer" style="border: 1px solid #ccc; padding: 10px; width: 50%; margin: 0 auto;">
    <div id="messagesList" style="height: 300px; overflow-y: scroll; border-bottom: 1px solid #ccc; margin-bottom: 10px;">
        @foreach (var message in Model.Messages)
        {
            <div>
                <strong>@message.Sender.UserName:</strong> @message.Content
            </div>
        }
    </div>
    <input type="hidden" id="chatSessionId" value="@Model.ChatSessionId" />
    <input type="text" id="userInput" placeholder="Your Name" style="width: 100%; margin-bottom: 10px;" />
    <input type="text" id="messageInput" placeholder="Message" style="width: 100%; margin-bottom: 10px;" />
    <input type="text" id="toUserInput" placeholder="Recipient's Name" style="width: 100%; margin-bottom: 10px;" />
    <button id="sendButton" style="width: 100%;">Send</button>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.2/signalr.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", function (user, message) {
            const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const encodedMsg = `<strong>${user}:</strong> ${msg}`;
            const div = document.createElement("div");
            div.innerHTML = encodedMsg;
            document.getElementById("messagesList").appendChild(div);
            console.log("Received message:", user, message);
        });

        connection.start().then(function () {
            console.log('Connected to hub');
        }).catch(function (err) {
            console.error('Error connecting to hub:', err);
        });

        document.getElementById("sendButton").addEventListener("click", function (event) {
            const user = document.getElementById("userInput").value;
            const message = document.getElementById("messageInput").value.trim();
            const toUser = document.getElementById("toUserInput").value;
            const chatSessionId = document.getElementById("chatSessionId").value;

            console.log("Sending message:", { chatSessionId, content: message, toUser });

            if (!message) {
                console.error('Message content cannot be empty.');
                return;
            }

            connection.invoke("SendMessage", user, message, toUser).catch(function (err) {
                console.error('Error sending message:', err);
            });

            fetch('/Chat/SendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({
                    chatSessionId: parseInt(chatSessionId),
                    content: message,
                    toUser: toUser
                })
            }).then(function (response) {
                if (!response.ok) {
                    console.error('Failed to send message to server:', response.status);
                    return response.text().then(text => { throw new Error(text); });
                }
            }).catch(function (err) {
                console.error('Failed to send message to server:', err);
            });

            event.preventDefault();
        });
    </script>
}
