@* @using System.Security.Claims
@model IEnumerable<ChatSession>

<h2>Chat Sessions</h2>
@foreach (var session in Model)
{
    <div>
        <h3>Chat with @(session.User1Id == User.FindFirstValue(ClaimTypes.NameIdentifier) ? session.User2.UserName : session.User1.UserName)</h3>
        <ul>
            @foreach (var message in session.Messages)
            {
                <li><strong>@message.Sender.UserName:</strong> @message.Content</li>
            }
        </ul>
        <form asp-action="SendMessage" method="post">
            <input type="hidden" name="chatSessionId" value="@session.ChatSessionId" />
            <input type="text" name="content" />
            <button type="submit">Send</button>
        </form>
    </div>
}
 *@
 @{
    ViewData["Title"] = "Chat";
    Layout = "~/Views/Shared/_NavBar.cshtml";
}
<head>
    <link rel="stylesheet" href="~/css/styles.css" asp-append-version="true" />
</head>

<h2>Chat Room</h2>

<div id="chatContainer" style="border: 1px solid #ccc; padding: 10px; width: 50%; margin: 0 auto;">
    <div id="messagesList" style="height: 300px; overflow-y: scroll; border-bottom: 1px solid #ccc; margin-bottom: 10px;">
        @foreach (var message in Model.Messages)
        {
            <div>
                <strong>@message.Sender.UserName:</strong> @message.Content
            </div>
        }
    </div>
    <input type="text" id="userInput" placeholder="Your Name" style="width: 100%; margin-bottom: 10px;" />
    <input type="text" id="recipientInput" placeholder="Recipient's Name" style="width: 100%; margin-bottom: 10px;" />
    <input type="text" id="messageInput" placeholder="Message" style="width: 100%; margin-bottom: 10px;" />
    <button id="sendButton" style="width: 100%;">Send</button>
</div>


@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.2/signalr.min.js"></script>

    <script>
        const connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

        connection.onclose(async () => {
            console.log("Connection closed. Trying to reconnect...");
            await start();
        });

        connection.on("ReceiveMessage", function (user, message) {
            const msg = document.createElement("div");
            msg.innerHTML = `<strong>${user}:</strong> ${message}`;
            document.getElementById("messagesList").appendChild(msg);
        });

        connection.on("UserNotFound", function (recipient) {
            alert(`User '${recipient}' not found.`);
        });

        async function start() {
            try {
                await connection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.error("SignalR Connection Error: ", err);
                setTimeout(start, 5000);
            }
        }

        start();

        document.getElementById("sendButton").addEventListener("click", function (event) {
            const user = document.getElementById("userInput").value;
            const recipient = document.getElementById("recipientInput").value;
            const message = document.getElementById("messageInput").value;
            if (user && recipient && message) {
                connection.invoke("SendMessage", user, recipient, message)
                    .catch(function (err) {
                        console.error("SignalR Send Error: ", err.toString());
                    });
            } else {
                console.warn("All fields are required.");
            }
            event.preventDefault();
        });
    </script>
}
