@{
    ViewData["Title"] = "Products";
    Layout = "~/Views/Shared/_NavBar.cshtml";
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products - Green Market</title>
    <!-- Bootstrap 5.2.3 CSS -->    
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link href="styles.css" rel="stylesheet">
</head>

<body>


    <!-- Main Content -->
    <div class="container my-5" id="products">
        <h2 class="text-center mb-4">Our Products</h2>

        <!-- Filter and Search Form -->
        <div class="row mb-4">
            <div class="col-md-6">
                <input type="text" id="searchInput" class="form-control" placeholder="Search products by name...">
            </div>
            <div class="col-md-3">
                <select id="filterCategory" class="form-select">
                    <option value="">All Categories</option>
                    <option value="Fruits">Fruits</option>
                    <option value="Vegetables">Vegetables</option>
                    <option value="Dairy">Dairy</option>
                </select>
            </div>
            <div class="col-md-3">
                <select id="sortOrder" class="form-select">
                    <option value="asc">Price: Low to High</option>
                    <option value="desc">Price: High to Low</option>
                </select>
            </div>
        </div>

        <!-- Products Listing -->
        <div id="productList" class="row g-4">
            <!-- Example Product Cards -->
            <div class="col-md-4 product-card" data-category="Fruits" data-price="5">
                <div class="card">
                    <img src="https://example.com/product1.jpg" class="card-img-top" alt="Organic Apples"> <!-- Replace URL -->
                    <div class="card-body">
                        <h5 class="card-title">Organic Apples</h5>
                        <p class="card-text">$5 - Freshly harvested organic apples, rich in flavor and vitamins.</p>
                    </div>
                </div>
            </div>
            <!-- More product cards go here, with corresponding data attributes for category and price
            Example placeholders: -->
            <div class="col-md-4 product-card" data-category="Vegetables" data-price="8">
                <div class="card">
                    <img src="https://example.com/product2.jpg" class="card-img-top" alt="Carrots">
                    <div class="card-body">
                        <h5 class="card-title">Organic Carrots</h5>
                        <p class="card-text">$8 - Fresh, organic carrots.</p>
                    </div>
                </div>
            </div>

        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>

    <!-- JavaScript to filter and sort products -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const searchInput = document.getElementById('searchInput');
            const filterCategory = document.getElementById('filterCategory');
            const sortOrder = document.getElementById('sortOrder');
            const productList = document.getElementById('productList');

            // Filter and search function
            function filterProducts() {
                const searchQuery = searchInput.value.toLowerCase();
                const category = filterCategory.value;
                const products = productList.getElementsByClassName('product-card');

                Array.from(products).forEach(function (product) {
                    const title = product.querySelector('.card-title').textContent.toLowerCase();
                    const productCategory = product.getAttribute('data-category');
                    const matchesSearch = title.includes(searchQuery);
                    const matchesCategory = category === "" || productCategory === category;

                    product.style.display = matchesSearch && matchesCategory ? 'block' : 'none';
                });

                // Sort Products
                sortProducts();
            }

            // Sort function
            function sortProducts() {
                const order = sortOrder.value;
                const products = Array.from(productList.getElementsByClassName('product-card'));

                products.sort(function (a, b) {
                    const priceA = parseInt(a.getAttribute('data-price'), 10);
                    const priceB = parseInt(b.getAttribute('data-price'), 10);

                    return order === 'asc' ? priceA - priceB : priceB - priceA;
                });

                products.forEach(function (product) {
                    productList.appendChild(product);
                });
            }

            // Event Listeners
            searchInput.addEventListener('input', filterProducts);
            filterCategory.addEventListener('change', filterProducts);
            sortOrder.addEventListener('change', sortProducts);

            // Initial filter application
            filterProducts();
        });
    </script>

</body>

</html>
